package main.components.facture;

import assets.swing.cell.v.TableActionCellEditorV;
import assets.swing.cell.v.TableActionCellRenderV;
import assets.swing.cell.v.TableActionEventV;
import java.sql.SQLException;
import java.util.Dictionary;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import main.components.Message;
import main.controller.ControllerFacture;
import main.views.MainView;
import main.views.PanelFacture;

/**
 *
 * @author malco
 */
public class PanelList extends javax.swing.JPanel {

    private final MainView grandParent;
    private final PanelFacture parent;
    
    private final DefaultTableModel tableModel;
    
    private Dictionary[] factureList;
            
    /**
     * Creates new form PanelListFacture
     * @param grandParent
     * @param parent
     */
    public PanelList(MainView grandParent, PanelFacture parent) {
        initComponents();
        
        this.grandParent = grandParent;
        this.parent = parent;
                
        tableModel = (DefaultTableModel) jTable1.getModel();
        
        setFactureStatusInChoiceStatus();
        
        TableActionEventV event = new TableActionEventV() {
            @Override
            public void onView(int row) {
                try {
                    Dictionary factureData = ControllerFacture.getFactureInfos(Integer.parseInt(factureList[row].get("id").toString()));
                    parent.setViewFacturePanel(factureData);
                } catch (SQLException ex) {
                    grandParent.showMessage(Message.MessageType.ERROR, "Erreur: On view facture");
                    Logger.getLogger(PanelList.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        
        // les actions sur la colone Action
        jTable1.getColumnModel().getColumn(6).setCellRenderer(new TableActionCellRenderV()); // le visuel
        jTable1.getColumnModel().getColumn(6).setCellEditor(new TableActionCellEditorV(event));// les events 
        
        navigateByChoice_status(choice_status.getSelectedItem());
    }
    
    private void setFactureStatusInChoiceStatus() {
        String[] listFactureStatus = ControllerFacture.getFactureStatus();
        for(String status : listFactureStatus) {
            choice_status.add(status);
        }
    }
    
    private void setFactureListToTable() {
         while (tableModel.getRowCount() > 0) { tableModel.removeRow(0); }
        for(Dictionary factureInfo : factureList){
            tableModel.addRow(new Object[]{ 
                factureInfo.get("id"), 
                factureInfo.get("patientFirstName")+" "+factureInfo.get("patientLastName"),
                factureInfo.get("reason"),
                factureInfo.get("appointmentDate"), 
                factureInfo.get("date"), 
                factureInfo.get("status")
            });
        }
    }
    private void setPaidFactureToTable () throws SQLException {
        factureList = ControllerFacture.getPaidFactures();
        setFactureListToTable();
    }
    private void setUnpaidFactureToTable () throws SQLException {
        factureList = ControllerFacture.getUnpaidFactures();
        setFactureListToTable();
    }
    
    private void navigateByChoice_status(String choice_statusSelectedItem ) {
        switch (choice_statusSelectedItem) {
            case "payée" -> {
                try {
                    setPaidFactureToTable();
                } catch (SQLException ex) {
                    grandParent.showMessage(Message.MessageType.ERROR, "Errur: case payée");
                    Logger.getLogger(PanelList.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            case "impayée" -> {
                try {
                    setUnpaidFactureToTable();
                } catch (SQLException ex) {
                    grandParent.showMessage(Message.MessageType.ERROR, "Errur: case impayée");
                    Logger.getLogger(PanelList.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            default -> throw new AssertionError();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        choice_status = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();

        setOpaque(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fact N°", "Patient", "Raison", "Date rendez-vous", "Date facture", "Statut", "Actions"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(40);
        jTable1.setSelectionBackground(new java.awt.Color(35, 166, 97));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        choice_status.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice_statusItemStateChanged(evt);
            }
        });

        jLabel1.setText("Statut :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choice_status, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(choice_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void choice_statusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice_statusItemStateChanged
        navigateByChoice_status(choice_status.getSelectedItem());
    }//GEN-LAST:event_choice_statusItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice choice_status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
